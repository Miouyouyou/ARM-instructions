{"branching":{"B%{cond}":["Branch%{cond}",["thumb_conditions"],["thumb_conditions"]],"BL%{cond}":["Branch with Link%{cond}",[],[]],"BLX%{cond}":["Branch with Link and Exchange%{cond}",[],[]],"BX%{cond}":["Branch and Exchange%{cond}",[],[]],"BXJ%{cond}":["Branch and Exchange Jazelle%{cond}",[],[]],"CBZ":["Compare and Branch on Zero",["thumb_only","unconditionnal"],["thumb_only","unconditionnal"]],"CBNZ":["Compare and Branch on NonZero",["thumb_only","unconditionnal"],["thumb_only","unconditionnal"]],"LDC%{cond}":["Load Coprocessor%{cond}",["coprocessor_encodings"],["coprocessor_encodings"]],"LDR%{cond}":["Load Register%{cond}",[],[]],"LDRB%{cond}":["Load Register Byte%{cond}",[],[]],"LDRD%{cond}":["Load Register Dual%{cond}",[],[]],"LDRH%{cond}":["Load Register Halfword%{cond}",[],[]],"LDRSB%{cond}":["Load Register Signed Byte%{cond}",[],[]],"LDRSH%{cond}":["Load Register Signed Halfword%{cond}",[],[]],"TBB%{cond}":["Table Branch Byte%{cond}",["thumb_only"],["thumb_only"]],"TBH%{cond}":["Table Branch Halfword%{cond}",["thumb_only"],["thumb_only"]],"PLD":["Preload Data",["unconditionnal"],["unconditionnal"]],"PLDW":["Preload Data (Wide)",["unconditionnal"],["unconditionnal"]],"PLI":["Preload Instruction",["unconditionnal"],["unconditionnal"]]},"Data processing":{"Standard data-processing instructions":{"ADC%{cond}":["Add With Carry%{cond}",["flag_updater"],["flag_updater"]],"ADD%{cond}":["Add%{cond}",["flag_updater"],["flag_updater"]],"ADR%{cond}":["Add to PC%{cond}",[],[]],"AND%{cond}":["Bitwise AND%{cond}",["flag_updater"],["flag_updater"]],"BIC%{cond}":["Bitwise Bit Clear%{cond}",["flag_updater"],["flag_updater"]],"CMN%{cond}":["Compare Negative%{cond}",[],[]],"CMP%{cond}":["Compare%{cond}",[],[]],"EOR%{cond}":["Bitwise Exclusive OR%{cond}",["flag_updater"],["flag_updater"]],"MOV%{cond}":["Move%{cond}",["flag_updater"],["flag_updater"]],"MVN%{cond}":["Bitwise NOT%{cond}",["flag_updater"],["flag_updater"]],"ORN%{cond}":["Bitwise OR NOT%{cond}",["flag_updater"],["flag_updater"]],"ORR%{cond}":["Bitwise OR%{cond}",["flag_updater"],["flag_updater"]],"RSB%{cond}":["Reverse Subtract%{cond}",["flag_updater"],["flag_updater"]],"RSC%{cond}":["Reverse Subtract with Carry%{cond}",["flag_updater"],["flag_updater"]],"SBC%{cond}":["Subtract with Carry%{cond}",["flag_updater"],["flag_updater"]],"SUB%{cond}":["Subtract%{cond}",["flag_updater"],["flag_updater"]],"TEQ%{cond}":["Test Equivalence%{cond}",[],[]],"TST%{cond}":["Test%{cond}",[],[]]},"Shift instructions":{"ASR%{cond}":["Arithmetic Shift Right%{cond}",["flag_updater"],["flag_updater"]],"LSL%{cond}":["Logical Shift Left%{cond}",["flag_updater"],["flag_updater"]],"LSR%{cond}":["Logical Shift Right%{cond}",["flag_updater"],["flag_updater"]],"ROR%{cond}":["Rotate Right%{cond}",["flag_updater"],["flag_updater"]],"RRX%{cond}":["Rotate Right with Extend%{cond}",["flag_updater"],["flag_updater"]]},"Multiply instructions":{"General":{"MLA%{cond}":["Multiply Accumulate%{cond}",["flag_updater"],["flag_updater"]],"MLS%{cond}":["Multiply and Subtract%{cond}",["flag_updater"],["flag_updater"]],"MUL%{cond}":["Multiply%{cond}",["flag_updater"],["flag_updater"]]},"Signed":{"SMLABB%{cond}":["Signed Multiply Accumulate (halfwords)%{cond}",["two_half_parts"],["two_half_parts"]],"SMLAD%{cond}":["Signed Multiply Accumulate Dual%{cond}",["cross_parts"],["cross_parts"]],"SMLAL%{cond}":["Signed Multiply Accumulate Long%{cond}",["flag_updater"],["flag_updater"]],"SMLALBB%{cond}":["Signed Multiply Accumulate Long (halfwords)%{cond}",["two_half_parts"],["two_half_parts"]],"SMLALD%{cond}":["Signed Multiply Accumulate Dual%{cond}",["cross_parts"],["cross_parts"]],"SMLAWB%{cond}":["Signed Multiply Accumulate (word by halfword)%{cond}",["last_half_part"],["last_half_part"]],"SMLSD%{cond}":["Signed Multiply Subtract Dual%{cond}",["cross_parts"],["cross_parts"]],"SMLSLD%{cond}":["Signed Multiply Subtract Long Dual%{cond}",["cross_parts"],["cross_parts"]],"SMMLA%{cond}":["Signed Most Significant Word Multiply Accumulate%{cond}",["rounded"],["rounded"]],"SMMLS%{cond}":["Signed Most Significant Word Multiply Subtract%{cond}",["rounded"],["rounded"]],"SMMUL%{cond}":["Signed Most Significant Word Multiply%{cond}",["rounded"],["rounded"]],"SMUAD%{cond}":["Signed Dual Multiply Add%{cond}",["cross_parts"],["cross_parts"]],"SMULBB%{cond}":["Signed Multiply (halfwords)%{cond}",["two_half_parts"],["two_half_parts"]],"SMULL%{cond}":["Signed Multiply Long%{cond}",["flag_updater"],["flag_updater"]],"SMULWB%{cond}":["Signed Multiply (word by halfword)%{cond}",["last_half_part"],["last_half_part"]],"SMUSD%{cond}":["Signed Multiply Subtract Dual%{cond}",["cross_parts"],["cross_parts"]]},"Unsigned":{"UMAAL%{cond}":["Unsigned Multiply Accumulate Accumulate Long%{cond}",[],[]],"UMLAL%{cond}":["Unsigned Multiply Accumulate Long%{cond}",["flag_updater"],["flag_updater"]],"UMULL%{cond}":["Unsigned Multiply Long%{cond}",["flag_updater"],["flag_updater"]]}},"Saturating instructions":{"SSAT%{cond}":["Signed Saturate%{cond}",[],[]],"SSAT16%{cond}":["Signed Saturate 16%{cond}",[],[]],"USAT%{cond}":["Unsigned Saturate%{cond}",[],[]],"USAT16%{cond}":["Unsigned Saturate 16%{cond}",[],[]]},"Saturating addition and substraction instructions":{"QADD%{cond}":["Saturating Add%{cond}",[],[]],"QSUB%{cond}":["Saturating Subtract%{cond}",[],[]],"QDADD%{cond}":["Saturating Double and Add%{cond}",[],[]],"QDSUB%{cond}":["Saturating Double and Subtract%{cond}",[],[]]},"Packing and unpacking instructions":{"PKH%{cond}":["Pack Halfword%{cond}",["half_and_half"],["half_and_half"]],"SXTAB%{cond}":["Signed Extend and Add Byte%{cond}",[],[]],"SXTAB16%{cond}":["Signed Extend and Add Byte 16%{cond}",[],[]],"SXTAH%{cond}":["Signed Extend and Add Halfword%{cond}",[],[]],"SXTB%{cond}":["Signed Extend Byte%{cond}",[],[]],"SXTB16%{cond}":["Signed Extend Byte 16%{cond}",[],[]],"SXTH%{cond}":["Signed Extend Halfword%{cond}",[],[]],"UXTAB%{cond}":["Unsigned Extend and Add Byte%{cond}",[],[]],"UXTAB16%{cond}":["Unsigned Extend and Add Byte 16%{cond}",[],[]],"UXTAH%{cond}":["Unsigned Extend and Add Halfword%{cond}",[],[]],"UXTB%{cond}":["Unsigned Extend Byte%{cond}",[],[]],"UXTB16%{cond}":["Unsigned Extend Byte 16%{cond}",[],[]],"UXTH%{cond}":["Unsigned Extend Halfword%{cond}",[],[]]},"Parallel addition and substraction instructions":{"SADD16%{cond}":["Signed Add 16%{cond}",[],[]],"QADD16%{cond}":["Saturating Add 16%{cond}",[],[]],"SHADD16%{cond}":["Signed Halving Add 16%{cond}",[],[]],"UADD16%{cond}":["Unsigned Add 16%{cond}",[],[]],"UQADD16%{cond}":["Unsigned Saturating Add 16%{cond}",[],[]],"UHADD16%{cond}":["Unsigned Halving Add 16%{cond}",[],[]],"SASX%{cond}":["Signed Add and Subtract with Exchange%{cond}",[],[]],"QASX%{cond}":["Saturating Add and Subtract with Exchange%{cond}",[],[]],"SHASX%{cond}":["Signed Halving Add and Subtract with Exchange%{cond}",[],[]],"UASX%{cond}":["Unsigned Add and Subtract with Exchange%{cond}",[],[]],"UQASX%{cond}":["Unsigned Saturating Add and Subtract with Exchange%{cond}",[],[]],"UHASX%{cond}":["Unsigned Halving Add and Subtract with Exchange%{cond}",[],[]],"SSAX%{cond}":["Signed Subtract and Add with Exchange%{cond}",[],[]],"QSAX%{cond}":["Saturating Subtract and Add with Exchange%{cond}",[],[]],"SHSAX%{cond}":["Signed Halving Subtract and Add with Exchange%{cond}",[],[]],"USAX%{cond}":["Unsigned Subtract and Add with Exchange%{cond}",[],[]],"UQSAX%{cond}":["Unsigned Saturating Subtract and Add with Exchange%{cond}",[],[]],"UHSAX%{cond}":["Unsigned Halving Subtract and Add with Exchange%{cond}",[],[]],"SSUB16%{cond}":["Signed Subtract 16%{cond}",[],[]],"QSUB16%{cond}":["Saturating Subtract 16%{cond}",[],[]],"SHSUB16%{cond}":["Signed Halving Subtract 16%{cond}",[],[]],"USUB16%{cond}":["Unsigned Subtract 16%{cond}",[],[]],"UQSUB16%{cond}":["Unsigned Saturating Subtract 16%{cond}",[],[]],"UHSUB16%{cond}":["Unsigned Halving Subtract 16%{cond}",[],[]],"SADD8%{cond}":["Signed Add 8%{cond}",[],[]],"QADD8%{cond}":["Saturating Add 8%{cond}",[],[]],"SHADD8%{cond}":["Signed Halving Add 8%{cond}",[],[]],"UADD8%{cond}":["Unsigned Add 8%{cond}",[],[]],"UQADD8%{cond}":["Unsigned Saturating Add 8%{cond}",[],[]],"UHADD8%{cond}":["Unsigned Halving Add 8%{cond}",[],[]],"SSUB8%{cond}":["Signed Subtract 8%{cond}",[],[]],"QSUB8%{cond}":["Saturating Subtract 8%{cond}",[],[]],"SHSUB8%{cond}":["Signed Halving Subtract 8%{cond}",[],[]],"USUB8%{cond}":["Unsigned Subtract 8%{cond}",[],[]],"UQSUB8%{cond}":["Unsigned Saturating Subtract 8%{cond}",[],[]],"UHSUB8%{cond}":["Unsigned Halving Subtract 8%{cond}",[],[]]},"Divide instructions":{"SDIV%{cond}":["Signed Divide%{cond}",[],[]],"UDIV%{cond}":["Unsigned Divide%{cond}",[],[]]},"Miscellaneous data-processing instructions":{"BFC%{cond}":["Bit Field Clear%{cond}",[],[]],"BFI%{cond}":["Bit Field Insert%{cond}",[],[]],"CLZ%{cond}":["Count Leading Zeros%{cond}",[],[]],"MOVT%{cond}":["Move Top%{cond}",[],[]],"RBIT%{cond}":["Reverse Bits%{cond}",[],[]],"REV%{cond}":["Byte-Reverse Word%{cond}",[],[]],"REV16%{cond}":["Byte-Reverse Packed Halfword%{cond}",[],[]],"REVSH%{cond}":["Byte-Reverse Signed Halfword%{cond}",[],[]],"SBFX%{cond}":["Signed Bit Field Extract%{cond}",[],[]],"SEL%{cond}":["Select Bytes%{cond}",[],[]],"UBFX%{cond}":["Unsigned Bit Field Extract%{cond}",[],[]],"USAD8%{cond}":["Unsigned Sum of Absolute Differences%{cond}",[],[]],"USADA8%{cond}":["Unsigned Sum of Absolute Differences and Accumulate%{cond}",[],[]]}},"Status register access instructions":{"Banked register access instructions":{"MRS%{cond}":["Move to Register from Special register%{cond}",[],[]],"MSR%{cond}":["Move to Special register from ARM core register%{cond}",[],[]]}},"Load/store instructions":{"LDR%{cond}":["Load Register%{cond}",[],[]],"STR%{cond}":["Store Register%{cond}",[],[]],"LDRT%{cond}":["Load Register Unprivileged%{cond}",[],[]],"STRT%{cond}":["Store Register Unprivileged%{cond}",[],[]],"LDREX%{cond}":["Load Register Exclusive%{cond}",[],[]],"STREX%{cond}":["Store Register Exclusive%{cond}",[],[]],"STRH%{cond}":["Store Register Halfword%{cond}",[],[]],"STRHT%{cond}":["Store Register Halfword Unprivileged%{cond}",[],[]],"STREXH%{cond}":["Store Register Exclusive Halfword%{cond}",[],[]],"LDRH%{cond}":["Load Register Halfword%{cond}",[],[]],"LDRHT%{cond}":["Load Register Halfword Unprivileged%{cond}",[],[]],"LDREXH%{cond}":["Load Register Exclusive Halfword%{cond}",[],[]],"LDRSH%{cond}":["Load Register Signed Halfword%{cond}",[],[]],"LDRSHT%{cond}":["Load Register Signed Halfword Unprivileged%{cond}",[],[]],"STRB%{cond}":["Store Register Byte%{cond}",[],[]],"STRBT%{cond}":["Store Register Byte Unprivileged%{cond}",[],[]],"STREXB%{cond}":["Store Register Exclusive Byte%{cond}",[],[]],"LDRB%{cond}":["Load Register Byte%{cond}",[],[]],"LDRBT%{cond}":["Load Register Byte Unprivileged%{cond}",[],[]],"LDREXB%{cond}":["Load Register Exclusive Byte%{cond}",[],[]],"LDRSB%{cond}":["Load Register Signed Byte%{cond}",[],[]],"LDRSBT%{cond}":["Load Register Signed Byte Unprivileged%{cond}",[],[]],"LDRD%{cond}":["Load Register Dual%{cond}",[],[]],"STRD%{cond}":["Store Register Dual%{cond}",[],[]],"LDREXD%{cond}":["Load Register Exclusive Dual%{cond}",[],[]],"STREXD%{cond}":["Store Register Exclusive Dual%{cond}",[],[]]},"Load/store multiple instructions":{"LDM%{cond}":["Load Multiple%{cond}",[{"amode":{"default":"da","da":"fa","db":"ea","ia":"fd","ib":"ed"}}],[]],"POP%{cond}":["Pop Multiple Registers%{cond}",[],[]],"PUSH%{cond}":["Push Multiple Registers%{cond}",[],[]],"STM%{cond}":["Store Multiple%{cond}",[{"amode":{"default":"ia","da":"ed","db":"fd","ia":"ea","ib":"fa"}}],[]]},"Miscellaneous instructions":{"CLREX":["Clear-Exclusive",["unconditionnal"],["unconditionnal"]],"DBG%{cond}":["Debug Hint%{cond}",[],[]],"DMB":["Data Memory Barrier",["unconditionnal"],["unconditionnal"]],"DSB":["Data Synchronization Barrier",["unconditionnal"],["unconditionnal"]],"ISB":["Instruction Synchronization Barrier",["unconditionnal"],["unconditionnal"]],"IT%{cond}":["If-Then%{cond}",["thumb_only","it_conditions"],["thumb_only","it_conditions"]],"NOP%{cond}":["No Operation%{cond}",[],[]],"PLD":["Preload Data",["unconditionnal"],["unconditionnal"]],"PLDW":["Preload Data Wide",["unconditionnal"],["unconditionnal"]],"PLI":["Preload Instruction",["unconditionnal"],["unconditionnal"]],"SETEND":["Set Endianness",["unconditionnal"],["unconditionnal"]],"SEV%{cond}":["Send Event%{cond}",[],[]],"SWP%{cond}":["Swap%{cond}",["deprecated","byte_suffix"],["deprecated","byte_suffix"]],"WFE%{cond}":["Wait for Event%{cond}",[],[]],"WFI%{cond}":["Wait for Interrupt%{cond}",[],[]],"YIELD%{cond}":["Yield%{cond}",[],[]]},"Exception-generating and exception-handling instructions":{"SVC%{cond}":["Supervisor Call%{cond}",[],[]],"BKPT":["Breakpoint",["unconditionnal"],["unconditionnal"]],"SMC%{cond}":["Secure Monitor Call%{cond}",[],[]],"RFE%{cond}":["Return From Exception%{cond}",[{"amode":{"da":"fa","db":"ea","ia":"fd","ib":"ed"}}],[]],"SUBS%{cond}":["Subtract%{cond}",[],[]],"HVC":["Hypervisor Call",["unconditionnal"],["unconditionnal"]],"ERET%{cond}":["Exception Return%{cond}",[],[]],"LDM%{cond}":["Load Multiple%{cond}",[{"amode":{"ia":"fd","da":"fa","db":"ea","ib":"ed"}}],[]],"SRS%{cond}":["Store Return State%{cond}",[{"amode":{"da":"ed","db":"fd","ia":"ea","ib":"fa"}}],[]]},"Coprocessor instructions":{"CDP":["Coprocessor Data Processing",["coprocessor_encodings","unconditionnal"],["coprocessor_encodings","unconditionnal"]],"MCR":["Move to Coprocessor from ARM core register",["coprocessor_encodings","unconditionnal"],["coprocessor_encodings","unconditionnal"]],"MCRR":["Move to Coprocessor from two ARM core registers",["coprocessor_encodings","unconditionnal"],["coprocessor_encodings","unconditionnal"]],"MRC":["Move to ARM core register from Coprocessor",["coprocessor_encodings","unconditionnal"],["coprocessor_encodings","unconditionnal"]],"MRRC":["Move to two ARM core registers from Coprocessor",["coprocessor_encodings","unconditionnal"],["coprocessor_encodings","unconditionnal"]],"LDC":["Load Coprocessor",["coprocessor_encodings","unconditionnal"],["coprocessor_encodings","unconditionnal"]],"STC":["Store Coprocessor",["coprocessor_encodings","unconditionnal","stc_l_encoding"],["coprocessor_encodings","unconditionnal","stc_l_encoding"]]},"Advanced SIMD and Floating-point load/store instructions":{"Extension register load/store instructions":{"VLDM%{cond}":["Vector Load Multiple%{cond}",[{"amode":["ia","db"],"vector_sizes":[32,64]}],[]],"VLDR%{cond}":["Vector Load Register%{cond}",[{"vector_sizes":[32,64]}],[]],"VSTM%{cond}":["Vector Store Multiple%{cond}",[{"amode":["ia","db"],"vector_sizes":[32,64]}],[]],"VSTR%{cond}":["Vector Store Register%{cond}",[{"vector_sizes":[32,64]}],[]]},"Element and structure load/store instructions":{"VLD1.%{vtype}":["%{vtype}Vector Load (multiple single elements)",[{"vector_sizes":[8,16,32,64]},"simd_conditions"],["simd_conditions"]],"VLD2.%{vtype}":["%{vtype}Vector Load (multiple 2-elements structures)",[{"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]],"VLD3.%{vtype}":["%{vtype}Vector Load (multiple 3-elements structures)",[{"vector_sizes":[8,16,32,64]},"simd_conditions"],["simd_conditions"]],"VLD4.%{vtype}":["%{vtype}Vector Load (multiple 4-elements structures)",[{"vector_sizes":[8,16,32,64]},"simd_conditions"],["simd_conditions"]],"VST1.%{vtype}":["%{vtype}Vector Store (multiple single elements)",[{"vector_sizes":[8,16,32,64]},"simd_conditions"],["simd_conditions"]],"VST2.%{vtype}":["%{vtype}Vector Store (multiple 2-elements structures)",[{"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]],"VST3.%{vtype}":["%{vtype}Vector Store (multiple 3-elements structures)",[{"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]],"VST4.%{vtype}":["%{vtype}Vector Store (multiple 4-elements structures)",[{"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]]}},"Advanced SIMD and Floating-point register transfer instructions":{"VDUP.%{vtype}":["%{vtype}Vector Duplicate",["vector_size","simd_conditions"],["vector_size","simd_conditions"]],"VMOV%{cond}":["Vector Move%{cond}",[{"vector_types":["i8","i16","i32","i64","f32","f64"]}],[]],"VMRS%{cond}":["Vector Move to ARM core register%{cond}",[],[]],"VMSR%{cond}":["Vector Move to Advanced SIMD and Floating-Point Extension System Register from ARM core register%{cond}",[],[]]},"Advanced SIMD data-processing instructions":{"Advanced SIMD parallel addition and substraction":{"VADD.%{vtype}":["%{vtype}Vector Add",[{"vector_types":["i8","i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VADDHN.%{vtype}":["%{vtype}Vector Add and Narrow",[{"vector_types":["i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VADDL.%{vtype}":["%{vtype}Vector Add Long",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VADDW.%{vtype}":["%{vtype}Vector Add Wide",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VH.%{vtype}":["%{vtype}Vector Halving",[{"vector_operations":["add","sub"],"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VPADAL.%{vtype}":["%{vtype}Vector Pairwise Add and Accumulate Long",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VPADD.%{vtype}":["%{vtype}Vector Pairwise Add",[{"vector_types":["i8","i16","i32"]},"simd_conditions"],["simd_conditions"]],"VPADDL.%{vtype}":["%{vtype}Vector Pairwise Add Long",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VRADDHN.%{vtype}":["%{vtype}Vector Rounding Add and Narrow",[{"vector_types":["i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VRHADD.%{vtype}":["%{vtype}Vector Rounding Halving Add",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VRSUBHN.%{vtype}":["%{vtype}Vector Rounding Subtract and Narrow",[{"vector_types":["i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VQADD.%{vtype}":["%{vtype}Vector Saturating Add",[{"vector_types":["s8","s16","s32","s64","u8","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VQSUB.%{vtype}":["%{vtype}Vector Saturating Subtract",[{"vector_types":["s8","s16","s32","s64","u8","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VSUB.%{vtype}":["%{vtype}Vector Subtract",[{"vector_types":["i8","i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VSUBHN.%{vtype}":["%{vtype}Vector Subtract and Narrow",[{"vector_types":["i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VSUBL.%{vtype}":["%{vtype}Vector Subtract Long",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VSUBW.%{vtype}":["%{vtype}Vector Subtract Wide",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]]},"Bitwise Advanced SIMD data-processing instructions":{"VAND.%{vtype}":["%{vtype}Vector Bitwise AND",["simd_conditions"],["simd_conditions"]],"VBIC%{cond}":["Vector Bitwise Bit Clear%{cond}",[{"vector_types":["i16","i32"]}],[]],"VEOR.%{vtype}":["%{vtype}Vector Bitwise Exclusive OR",["simd_conditions"],["simd_conditions"]],"VBIF.%{vtype}":["%{vtype}Vector Bitwise Insert if False",["simd_conditions"],["simd_conditions"]],"VBIT.%{vtype}":["%{vtype}Vector Bitwise Insert if True",["simd_conditions"],["simd_conditions"]],"VBSL.%{vtype}":["%{vtype}Vector Bitwise Select",["simd_conditions"],["simd_conditions"]],"VMOV.%{vtype}":["%{vtype}Vector Move",[{"vector_types":["s8","s16","u8","u16","32","i8","i16","i32","i64","f32"]},"simd_conditions"],["simd_conditions"]],"VMVN.%{vtype}":["%{vtype}Vector Bitwise NOT",[{"vector_types":["i16","i32"]},"simd_conditions"],["simd_conditions"]],"VORR.%{vtype}":["%{vtype}Vector Bitwise OR",[{"vector_types":["i16","i32"]},"simd_conditions"],["simd_conditions"]],"VORN.%{vtype}":["%{vtype}Vector Bitwise OR NOT",[{"vector_types":["i16","i32"]},"simd_conditions"],["simd_conditions"]]},"Advanced SIMD comparison instructions":{"VAC.%{vtype}":["%{vtype}Vector Absolute Compare",[{"comparaisons":["ge","gt","le","lt"],"vector_types":["f32"]},"simd_conditions"],["simd_conditions"]],"VC.%{vtype}":["%{vtype}Vector Compare",[{"comparaisons":["eq","ge","gt","le","lt"],"vector_types":["i8","i16","i32","f32"]},"simd_conditions"],["simd_conditions"]],"VTST.%{vtype}":["%{vtype}Vector Test",[{"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]]},"Advanced SIMD shift instructions":{"VQRSHL.%{vtype}":["%{vtype}Vector Saturating Rounding Shift Left",[{"vector_types":["s8","s16","s32","s64","u8","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VQRSHRN.%{vtype}":["%{vtype}Vector Saturating Rounding Shift Right Narrow",[{"vector_types":["s16","s32","s64","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VQRSHRUN.%{vtype}":["%{vtype}Vector Saturating Rounding Shift Right Unsigned Narrow",[{"vector_types":["s16","s32","s64"]},"simd_conditions"],["simd_conditions"]],"VQSHL.%{vtype}":["%{vtype}Vector Saturating Shift Left",[{"vector_types":["s8","s16","s32","s64","u8","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VQSHLU.%{vtype}":["%{vtype}Vector Saturating Shift Left Unsigned",[{"vector_types":["s8","s16","s32","s64"]},"simd_conditions"],["simd_conditions"]],"VQSHRN.%{vtype}":["%{vtype}Vector Saturating Shift Right Narrow",[{"vector_types":["s16","s32","s64","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VQSHRUN.%{vtype}":["%{vtype}Vector Saturating Shift Right Unsigned Narrow",[{"vector_types":["s8","s16","s32","s64"]},"simd_conditions"],["simd_conditions"]],"VRSHL.%{vtype}":["%{vtype}Vector Rounding Shift Left",[{"vector_types":["s8","s16","s32","s64","u8","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VRSHR.%{vtype}":["%{vtype}Vector Rounding Shift Right",[{"vector_types":["s8","s16","s32","s64","u8","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VRSRA.%{vtype}":["%{vtype}Vector Rounding Shift Right and Accumulate",[{"vector_types":["s8","s16","s32","s64","u8","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VRSHRN.%{vtype}":["%{vtype}Vector Rounding Shift Right and Narrow",[{"vector_types":["i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VSHL.%{vtype}":["%{vtype}Vector Shift Left",[{"vector_types":["s8","s16","s32","s64","u8","u16","u32","u64","i8","i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VSHLL.%{vtype}":["%{vtype}Vector Shift Left Long",[{"vector_types":["s8","s16","s32","u8","u16","u32","i8","i16","i32"]},"simd_conditions"],["simd_conditions"]],"VSHR.%{vtype}":["%{vtype}Vector Shift Right",[{"vector_types":["s8","s16","s32","s64","u8","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VSHRN.%{vtype}":["%{vtype}Vector Shift Right Narrow",[{"vector_types":["i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VSLI.%{vtype}":["%{vtype}Vector Shift Left and Insert",[{"vector_sizes":[8,16,32,64]},"simd_conditions"],["simd_conditions"]],"VSRA.%{vtype}":["%{vtype}Vector Shift Right and Accumulate",[{"vector_sizes":["s8","s16","s32","s64","u8","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VSRI.%{vtype}":["%{vtype}Vector Shift Right and Insert",[{"vector_sizes":[8,16,32,64]},"simd_conditions"],["simd_conditions"]]},"Advanced SIMD multiply instructions":{"VML.%{vtype}":["%{vtype}Vector Multiply and ",[{"operations":["accumulate","accumulate_long","subtract","subtract_long"],"vector_types":["s8","s16","s32","u8","u16","u32","i8","i16","i32"]},"simd_conditions"],["simd_conditions"]],"VMUL.%{vtype}":["%{vtype}Vector Multiply",["long",{"vector_types":["s8","s16","s32","u8","u16","u32","i8","i16","i32","p8"]},"simd_conditions"],["long","simd_conditions"]],"VFMA.%{vtype}":["%{vtype}Vector Fused Multiply ",[{"operations":["accumulate","subtract"],"vector_types":["f32","f64"]},"simd_conditions"],["simd_conditions"]],"VQDMLAL.%{vtype}":["%{vtype}Vector Saturating Doubling Multiply",[{"operations":["accumulate_long","subtract_long"],"vector_types":["s16","s32"]},"simd_conditions"],["simd_conditions"]],"VQDMULH.%{vtype}":["%{vtype}Vector Saturating Doubling Multiply Returning High Half",[{"vector_types":["s16","s32"]},"simd_conditions"],["simd_conditions"]],"VQRDMULH.%{vtype}":["%{vtype}Vector Saturating Rounding Doubling Multiply Returning High Half",[{"vector_types":["s16","s32"]},"simd_conditions"],["simd_conditions"]],"VQDMULL.%{vtype}":["%{vtype}Vector Saturating Doubling Multiply Long",[{"vector_types":["s16","s32"]},"simd_conditions"],["simd_conditions"]]},"Miscellaneous Advanced SIMD data-processing instructions":{"VABA.%{vtype}":["%{vtype}Vector Absolute Difference and Accumulate",[{"suffixes":["long"],"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VABD.%{vtype}":["%{vtype}Vector Absolute Difference",[{"suffixes":["long"],"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VABS.%{vtype}":["%{vtype}Vector Absolute",[{"vector_types":["s8","s16","s32","f32","f64"]},"simd_conditions"],["simd_conditions"]],"VCVT%{cond}":["Vector Convert between integer and floating-point%{cond}",[{"vector_conversions":["s32","f32","u32","f32","s32","f64","u32","f64","f16","f32","s16","f32","s16","f64","u16","f32","u16","f64"]}],[]],"VCLS.%{vtype}":["%{vtype}Vector Count Leading Sign Bits",[{"vector_types":["s8","s16","s32"]},"simd_conditions"],["simd_conditions"]],"VCLZ.%{vtype}":["%{vtype}Vector Count Leading Zeros",[{"vector_types":["i8","i16","i32"]},"simd_conditions"],["simd_conditions"]],"VCNT.%{vtype}":["%{vtype}Vector Count 1 bits",[{"vector_sizes":[8]},"simd_conditions"],["simd_conditions"]],"VDUP.%{vtype}":["%{vtype}Vector Duplicate",[{"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]],"VEXT.%{vtype}":["%{vtype}Vector Extract",[{"vector_sizes":[8,16,32,64]},"simd_conditions"],["simd_conditions"]],"VMOVN.%{vtype}":["%{vtype}Vector Move and Narrow",[{"vector_types":["i16","i32","i64"]},"simd_conditions"],["simd_conditions"]],"VMOVL.%{vtype}":["%{vtype}Vector Move Long",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VMAX.%{vtype}":["%{vtype}Vector Maximum",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VMIN.%{vtype}":["%{vtype}Vector Minimum",[{"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VNEG.%{vtype}":["%{vtype}Vector Negate",[{"vector_types":["s8","s16","s32","f32"]},"simd_conditions"],["simd_conditions"]],"VPMAX.%{vtype}":["%{vtype}Vector Pairwise",[{"operations":["min","max"],"vector_types":["s8","s16","s32","u8","u16","u32"]},"simd_conditions"],["simd_conditions"]],"VRECPE.%{vtype}":["%{vtype}Vector Reciprocal Estimate",[{"vector_types":["u32","f32"]},"simd_conditions"],["simd_conditions"]],"VRECPS.%{vtype}":["%{vtype}Vector Reciprocal Step",[{"vector_types":["f32"]},"simd_conditions"],["simd_conditions"]],"VRSQRTE.%{vtype}":["%{vtype}Vector Reciprocal Square Root Estimate",[{"vector_types":["u32","f32"]},"simd_conditions"],["simd_conditions"]],"VRSQRTS.%{vtype}":["%{vtype}Vector Reciprocal Square Root Step",[{"vector_types":["f32"]},"simd_conditions"],["simd_conditions"]],"VREV16.%{vtype}":["%{vtype}Vector Reverse in",[{"vector_reverse":[16,32,64],"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]],"VQABS.%{vtype}":["%{vtype}Vector Saturating Absolute",[{"vector_types":["s16","s32","s64"]},"simd_conditions"],["simd_conditions"]],"VQMOVN.%{vtype}":["%{vtype}Vector Move and Narrow",[{"vector_types":["s16","s32","s64","u16","u32","u64"]},"simd_conditions"],["simd_conditions"]],"VQMOVUN.%{vtype}":["%{vtype}Vector Move Unsigned and Narrow",[{"vector_types":["s16","s32","s64"]},"simd_conditions"],["simd_conditions"]],"VQNEG.%{vtype}":["%{vtype}Vector Saturate Negate",[{"vector_types":["s16","s32","s64"]},"simd_conditions"],["simd_conditions"]],"VSWP.%{vtype}":["%{vtype}Vector Swap",["simd_conditions"],["simd_conditions"]],"VTBL.%{vtype}":["%{vtype}Vector Table Lookup",["simd_conditions"],["simd_conditions"]],"VTBX.%{vtype}":["%{vtype}Vector Table Extension",["simd_conditions"],["simd_conditions"]],"VTRN.%{vtype}":["%{vtype}Vector Transpose",[{"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]],"VUZP.%{vtype}":["%{vtype}Vector Unzip",[{"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]],"VZIP.%{vtype}":["%{vtype}Vector Zip",[{"vector_sizes":[8,16,32]},"simd_conditions"],["simd_conditions"]]}},"Floating-point data-processing instructions":{"VABS%{cond}":["Vector Absolute%{cond}",[{"vector_types":["f32","f64"]}],[]],"VADD.%{vtype}":["%{vtype}Vector Add",[{"vector_types":["f32","f64"]},"simd_conditions"],["simd_conditions"]],"VCMP%{cond}":["Vector Compare%{cond}",[{"vector_types":["f32","f64"],"operations":["exception"]}],[]],"VCVT%{cond}":["Vector Convert%{cond}",[{"vector_conversions":["f32","f64","f16","f32"]}],[]],"VCVTR%{cond}":["Vector Convert Rounding%{cond}",[{"vector_conversions":["s32","f32","u32","f32","s32","f64","u32","f64"]}],[]],"VCVTT%{cond}":["Vector Convert Top%{cond}",[{"vector_conversions":["f16","f32"]}],[]],"VCVTB%{cond}":["Vector Convert Bottom%{cond}",[{"vector_conversions":["f16","f32"]}],[]],"VDIV%{cond}":["Vector Divide%{cond}",[{"vector_types":["f32","f64"]}],[]],"VMLA.%{vtype}":["%{vtype}Vector Multiply and ",[{"operations":["accumulate","subtract"],"vector_types":["f32","f64"]},"simd_conditions"],["simd_conditions"]],"VFMA%{cond}":["Vector Fused Multiply %{cond}",[{"operations":["accumulate","subtract"],"vector_types":["f32","f64"]}],[]],"VMOV.%{vtype}":["%{vtype}Vector Move",[{"vector_types":["f32","f64"]},"simd_conditions"],["simd_conditions"]],"VMUL.%{vtype}":["%{vtype}Vector Multiply",[{"vector_types":["f32","f64"]},"simd_conditions"],["simd_conditions"]],"VNEG.%{vtype}":["%{vtype}Vector Negate",[{"vector_types":["s8","s16","s32","f32"]},"simd_conditions"],["simd_conditions"]],"VNMLA%{cond}":["Vector Negate Multiply and %{cond}",[{"operations":["accumulate","subtract"],"vector_types":["f32","f64"]}],[]],"VNMUL%{cond}":["Vector Negate Multiply%{cond}",[{"vector_types":["f32","f64"]}],[]],"VFNM%{cond}":["Vector Fused Negate Multiply %{cond}",[{"operations":["accumulate","subtract"],"vector_types":["f32","f64"]}],[]],"VSQRT%{cond}":["Vector Square Root%{cond}",[{"vector_types":["f32","f64"]}],[]],"VSUB.%{vtype}":["%{vtype}Vector Subtract",[{"vector_types":["f32","f64"]},"simd_conditions"],["simd_conditions"]]}}